/*
 * Namf_Communication
 *
 * AMF Communication Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

 package communication

 import (
	"io/ioutil"
	"net/http"
 
	"github.com/free5gc/amf/internal/logger"
	"github.com/gin-gonic/gin"
 
	amf_context "github.com/free5gc/amf/internal/context"
	"github.com/free5gc/amf/internal/sbi/producer"
	"github.com/free5gc/openapi"
	"github.com/free5gc/openapi/models"
 )

 
 func HTTPNonUeN2MessageTransfer(c *gin.Context) {
	logger.CommLog.Infof("Handle Non Ue N2 Message Transfer has implemented.")
	body, err := ioutil.ReadAll(c.Request.Body)
	if err != nil {
		logger.CommLog.Errorf("Error reading request body: %v", err)
    	c.JSON(http.StatusBadRequest, gin.H{"error": "Invalid request body"})
    	return
	}

	var message models.NonUeN2MessageTransferRequest
	message.JsonData = new(models.N2InformationTransferReqData)
	contentType := c.GetHeader("Content-Type")
	openapi.Deserialize(&message, body, contentType)
		
	amfSelf := amf_context.GetSelf()
	logger.CommLog.Infof("Handle NonUeN2MessageTransfer Procedure...\n")
	producer.NonUeN2MessageTransferProcedure(amfSelf, message)
	 //c.JSON(http.StatusOK, gin.H{})
	responseData := generateResponseData()
	c.JSON(http.StatusOK, responseData)
	 
 }
/*test N50 Response*/
func generateResponseData() gin.H {
	logger.CommLog.Infof("Generating N2 Response Data...\n")
	responseData := gin.H{
		"description": "Non UE N2 Message Transfer successfully initiated.",
		"content": gin.H{
			"application/json": gin.H{
				"schema": gin.H{
					"description": "Data within a successful response to the N2 Information Transfer request to transfer N2 Information to the AN",
					"type":        "object",
					"properties": gin.H{
						"result": gin.H{
							"description": "Describes the result of N2 information transfer by AMF to the AN",
							"type":        "string",
							"enum": []string{
								"N2_INFO_TRANSFER_INITIATED",
							},
						},
					},
				},
			},
		},
	}
	return responseData
}